#!/usr/bin/python
"""
Utility to query the default include PATH of gcc.

Preshell  Copyright (C) 2013  Abel Sinkovics (abel@sinkovics.hu)
This program comes with ABSOLUTELY NO WARRANTY. This is free 
software, and you are welcome to redistribute it under certain 
conditions; for details visit <http://www.gnu.org/licenses/>.

Supported options:

 -g, --gcc <path>       The binary to use as gcc (default: gcc)
 -h, --help             Display this help message
 -t, --type sys|normal  The type of include path to query (default: sys)

Depending on its argument, the script queries the default
(system) include path of gcc.
"""

# Preshell - Interactive C/C++ preprocessor shell
# Copyright (C) 2013, Abel Sinkovics (abel@sinkovics.hu)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import subprocess
import getopt

def run(cmd):
  return subprocess.Popen(
    cmd, 
    stderr=subprocess.PIPE,
    stdout=subprocess.PIPE,
    stdin=subprocess.PIPE
  ).communicate(input='')

def get_standard_gcc_includes(gcc):
  cc1plus = run((gcc, '-print-prog-name=cc1plus'))[0].strip()
  includes = []
  sysincludes = []
  current = None
  for l in run((cc1plus, '-v'))[1].split('\n'):
    retry = True
    while retry:
      retry = False
      if current == None:
        if l.startswith('#include "'):
          current = includes
        elif l.startswith('#include <'):
          current = sysincludes
      else:
        if l.startswith(' '):
          current.append(l.strip())
        else:
          current = None
          retry = True
  return (includes, sysincludes)

def main():
  try:
    opts, args = getopt.getopt(sys.argv[1:], 'ht:g:', ['help', 'type=', 'gcc='])
  except getopt.error, msg:
    print msg
    print "Getting help: --help"
    sys.exit(1)

  type = 'sys'
  gcc = 'gcc'

  for o, a in opts:
    if o in ('-t', '--type'):
      if a in ('sys', 'normal'):
        type = a
      else:
        print 'Invalid type: %s' % (a)
        sys.exit(1)
    elif o in('-h', '--help'):
      print __doc__
      sys.exit(0)
    elif o in('-g', '--gcc'):
      gcc = a
  
  (normal, system) = get_standard_gcc_includes(gcc)
  if type == 'sys':
    paths = system
  else:
    paths = normal
  print '/*'
  print '  Preshell - Interactive C/C++ preprocessor shell'
  print '  Copyright (C) 2013, Abel Sinkovics (abel@sinkovics.hu)'
  print ''
  print '  This program is free software: you can redistribute it and/or modify'
  print '  it under the terms of the GNU General Public License as published by'
  print '  the Free Software Foundation, either version 3 of the License, or'
  print '  (at your option) any later version.'
  print ''
  print '  This program is distributed in the hope that it will be useful,'
  print '  but WITHOUT ANY WARRANTY; without even the implied warranty of'
  print '  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the'
  print '  GNU General Public License for more details.'
  print ''
  print '  You should have received a copy of the GNU General Public License'
  print '  along with this program.  If not, see <http://www.gnu.org/licenses/>.'
  print '*/'
  print ''
  for p in paths:
    print '(\"%s\")' % (p)
  print ''

if __name__ == '__main__':
  main()


